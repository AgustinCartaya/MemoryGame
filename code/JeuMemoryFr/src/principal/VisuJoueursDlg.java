package principal;


import java.awt.GridLayout;
import java.awt.Image;
import java.awt.event.ActionEvent;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;

/**
 * Fenêtre qui permet de visualiser les joueurs du jeu
 * @author Agustin Cartaya
 * @see LesJoueurs
 * @see Joueur
 */
public class VisuJoueursDlg extends javax.swing.JDialog {

    
    /**
     * Initialisation de la fenêtre, composants et variables
     * @param parent compossant parent
     * @param modal type d'ouverture
     * @param lj instance de la liste de joueurs
     */
    public VisuJoueursDlg(java.awt.Frame parent, boolean modal, LesJoueurs lj) {
        super(parent, modal);
        initComponents();
        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        this.lj = lj;
        
    }
    

    
    /**
     * lors de l'ouverture de la fenêtre les
     * boutons avec les joueurs sont montres
     * @param v true se la fenêtre es visible
     */
    @Override
    public void setVisible (boolean v){
        initTrombi();
        super.setVisible(v);
    }
    
    /**
     * Initialise les boutons contenant les images des joueurs
     */
    private void initTrombi(){
        //vérification de l'existence de la liste des joueurs non null
        if (this.lj != null){
            //obtenir le nombre de joueurs
            int nb = this.lj.getNbJoueurs();
            //éinitialiser le panneau qui aura les boutons
            panneau.removeAll();
            panneau.setLayout(new GridLayout(1, nb));
            //création de boutons dont leur attribut "name" est
            //l'index du joueur refere dans la liste
            for (int i=0; i< nb; i++){

                JButton jb= new JButton();
                Joueur j= lj.getJoueur(i);
                jb.setName(""+i);
                Image img = j.getPhoto().getImage().getScaledInstance(200, 200, Image.SCALE_SMOOTH);
                jb.setIcon(new ImageIcon(img));
                jb.addActionListener(new java.awt.event.ActionListener() {

                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        afficheInfosJoueur(evt);
                    }
                });
                panneau.add(jb);

            }

            this.pack();
        }

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        panneau = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        edition = new javax.swing.JTextArea();
        afficerInfos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choisissez un joueurs pour voir ses caracteristiques");
        getContentPane().add(jLabel1, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout panneauLayout = new javax.swing.GroupLayout(panneau);
        panneau.setLayout(panneauLayout);
        panneauLayout.setHorizontalGroup(
            panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 234, Short.MAX_VALUE)
        );
        panneauLayout.setVerticalGroup(
            panneauLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 263, Short.MAX_VALUE)
        );

        jPanel1.add(panneau, java.awt.BorderLayout.CENTER);

        edition.setColumns(20);
        edition.setRows(5);
        jScrollPane1.setViewportView(edition);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.EAST);

        afficerInfos.setText("Fermer");
        afficerInfos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficerInfosActionPerformed(evt);
            }
        });
        jPanel1.add(afficerInfos, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * pour le moment sert juiste à fermer la fenetre
     * @param evt source de l'événement
     */
    private void afficerInfosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficerInfosActionPerformed
        this.dispose();
    }//GEN-LAST:event_afficerInfosActionPerformed

    /**
     * Affiche les informations du joueur sélectionné
     * dans la zone d'édition
     * @param evt source de l'événement
     */
    private void afficheInfosJoueur(ActionEvent e){
        JButton bt = (JButton)e.getSource(); 
        edition.setText( this.lj.getJoueur( Integer.parseInt(bt.getName())).toString() );
        
    }
    

    //reference à la liste de joueurs
    private LesJoueurs lj;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton afficerInfos;
    private javax.swing.JTextArea edition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panneau;
    // End of variables declaration//GEN-END:variables
}
